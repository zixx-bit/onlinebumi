server {
        listen 80;
        listen [::]:80;

        root /var/www/test.com/html;
        index index.html index.htm index.nginx-debian.html;

        server_name test.com www.test.com;

        location / {
                try_files $uri $uri/ =404;
        }
}


sudo ln -s /etc/nginx/sites-available/shawk.space /etc/nginx/sites-enabled/



GNU nano 4.8         /etc/nginx/sites-available/shawk.space
server {
  listen 80;
  listen [::]:80;
  #include snippets/self-signed.conf;
  #include snippets/ssl-params.conf;

  root /var/www/shawk.space/html;
  index index.html index.htm index.nginx-debian.html;

  server_name shawk.space www.shawk.space;


      location / {
              try_files $uri $uri/ =404;
      }

}









server {
	listen 80;
	listen [::]:80;

	root /var/www/shawk.space/html;
	index index.php index.html index.htm index.nginx-debian.html;

	server_name shawk.space www.shawk.space;

	location / {
		try_files $uri $uri/ =404;
	}

	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php7.4-fpm.sock; # PHP version (php -v command)
	}
}



server {
    listen 80;
    listen [::]:80;

    server_name shawk.space www.shawk.space;

    return 302 http://$server_name$request_uri;
}





















server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        # concurs with nginx's one
             #
             #location ~ /\.ht {
             #       deny all;
             #}
     }


     # Virtual Host configuration for example.com
     #
     # You can move that to a different file under sites-available/ and symlink that
     # to sites-enabled/ to enable it.
     #
     #server {
     #       listen 80;
     #       listen [::]:80;
     #
     #       server_name example.com;
     #
     #       root /var/www/example.com;
     #       index index.html;
     #
     #       location / {
     #               try_files $uri $uri/ =404;
     #       }
     #}
